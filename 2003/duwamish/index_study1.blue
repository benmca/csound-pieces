<blue.BlueData hash=28962614-0 >
<blue.ftable.FTableSet hash=1-0 id=ftables >
</blue.ftable.FTableSet>
<blue.GlobalOrcSco hash=518154-0 id=globalOrcSco >
<java.lang.String hash=198486555-0 id=globalOrc >
ga1 	init	0
ga2	init	0
</java.lang.String>
<java.lang.String hash=-751949880-0 id=globalSco >
f1 0 16384 9 .5 1 0
f2 0 16384 10 1
f3 0 131072 1 "loopfinal16.wav" 0 0 0
f4 0 512 5 .001 100 1.0 312 1.0 100 .001
</java.lang.String>
</blue.GlobalOrcSco>
<blue.orchestra.InstrumentList hash=1-1 id=instrumentList >
</blue.orchestra.InstrumentList>
<blue.Orchestra hash=18026635-0 id=orchestra >
<java.util.TreeMap hash=60334538-0 id=orch >
<[>
<java.lang.Integer hash=1-2 >
<int id=value >
1
</int>
</java.lang.Integer>
<blue.orchestra.GenericInstrument hash=11947822-0 >
<java.lang.String hash=0-0 id=comment >

</java.lang.String>
<boolean id=enabled >
true
</boolean>
<int id=instrumentNumber >
1
</int>
<java.lang.String hash=974558858-0 id=instrumentText >
idur = p3
iamp = p4*100
ipitch = p5
ipan = p6
idist = p7
ipct = p8
indx = p9
iorigdur = p10
;iendx = indx+(iorigdur*.8)
;indx = indx + (.3 * iorigdur)
iendx = indx+iorigdur
indx = indx 
kamp	linen	iamp, .01, idur, .01
ktime   line    indx, idur , iendx
 
al  sndwarp kamp, ktime, ipitch, 3, 0, 4410, 882, 15, 1, 1

al=al*kamp

al, ar  locsig	al, ipan, idist, ipct
ar1, ar2	locsend
		outs	al, ar

ga1=ga1+ar1
ga2=ga2+ar2
</java.lang.String>
<java.lang.String hash=1937596360-0 id=name >
sndwarp indx
</java.lang.String>
</blue.orchestra.GenericInstrument>
<java.lang.Integer hash=2-0 >
<int id=value >
2
</int>
</java.lang.Integer>
<blue.orchestra.GenericInstrument hash=17333601-0 >
<java.lang.String hash=0-1 id=comment >

</java.lang.String>
<boolean id=enabled >
true
</boolean>
<int id=instrumentNumber >
1
</int>
<java.lang.String hash=-609673485-0 id=instrumentText >
idur = p3
iamp = p4
ipitch = p5
ipan = p6
idist = p7
ipct = p8
indx = p9
iorigdur = p10

kamp	linen	iamp, .01, idur, .01

al	diskin	"loopfinal16.wav", ipitch, indx
al=al*kamp
al, ar  locsig	al, ipan, idist, ipct
ar1, ar2	locsend
		outs	al, ar

ga1=ga1+ar1
ga2=ga2+ar2
</java.lang.String>
<java.lang.String hash=296587472-0 id=name >
snd indx
</java.lang.String>
</blue.orchestra.GenericInstrument>
<java.lang.Integer hash=99-0 >
<int id=value >
99
</int>
</java.lang.Integer>
<blue.orchestra.GenericInstrument hash=31053147-0 >
<java.lang.String hash=0-2 id=comment >

</java.lang.String>
<boolean id=enabled >
true
</boolean>
<int id=instrumentNumber >
1
</int>
<java.lang.String hash=-1186359394-0 id=instrumentText >
klin linseg  p4, p3, p4
kamp	linseg	1, p3, 1
a1	reverb2	ga1, klin, 1
a2	reverb2	ga2, klin, 1
	outs	a1*kamp,a2*kamp
ga1=0
ga2=0
</java.lang.String>
<java.lang.String hash=648660621-0 id=name >
untreverb
</java.lang.String>
</blue.orchestra.GenericInstrument>
</[>
</java.util.TreeMap>
</blue.Orchestra>
<blue.soundObject.PolyObject hash=6257983-0 id=pObj >
<int id=heightIndex >
2
</int>
<boolean id=isRoot >
true
</boolean>
<java.lang.String hash=3506402-0 id=name >
root
</java.lang.String>
<blue.noteProcessor.NoteProcessorChain hash=1-3 id=npc >
</blue.noteProcessor.NoteProcessorChain>
<int id=pixelSecond >
10
</int>
<boolean id=snapEnabled >
false
</boolean>
<float id=snapValue >
1.0
</float>
<java.util.ArrayList hash=2826358-0 id=soundLayers >
<[>
<blue.SoundLayer hash=2826327-0 >
<boolean id=muted >
false
</boolean>
<java.lang.String hash=0-3 id=name >

</java.lang.String>
<boolean id=solo >
false
</boolean>
<java.util.ArrayList hash=22563227-0 id=soundObjects >
<[>
<blue.soundObject.External hash=22563196-0 >
<java.lang.String hash=53544784-0 id=commandLine >
lisp.exe -M c:\Csound\cm-1.3\clisp\cm.mem
</java.lang.String>
<java.lang.String hash=-1820761141-0 id=name >
external
</java.lang.String>
<blue.noteProcessor.NoteProcessorChain hash=1-4 id=npc >
</blue.noteProcessor.NoteProcessorChain>
<float id=startTime >
0.0
</float>
<float id=subjectiveDuration >
160.0
</float>
<java.lang.String hash=-1806048520-0 id=text >
(in-package :stella)

(defparameter *repeaterM.wav_total_length* 7.218)
(defparameter *buflen* 8192)
(defparameter *totaldur* 0)
(defparameter i 0)
(defparameter du 0)
(defparameter idx 0) 
(defparameter idxdur 0) 
(defparameter ampidx 0) 

;
(defobject soundin_indx (csound-note)
  ((instr :initform "i") inst mytime dur amp pitch pan dist pct indx origdur)
  (:parameters instr inst mytime dur amp pitch pan dist pct indx origdur))

(defobject revnote (csound-note)
  ((name :initform "i99") mystart dur revtime)
  (:parameters name mystart dur revtime))


(defun stompidx(st tem pn len ampsca instrument passage)
  (algorithm nil soundin_indx (start st length len)
    (setf inst instrument)
	(setf mytime time)

    (setf idxdur '( ( 0 .542 q) ( .542 .808 e ) (.808 1.077 e ) (1.077 1.364 e ) (1.364 1.617 e ) (1.617 1.904 e ) ( 1.904 2.134 e ) )); 25 items
    
	(if (= passage 0)
		(setf i 
			(item 
				(items 0 1 2 3 4 5 6 in random)
		))	;index into paired stream
	)

	(if (= passage 1)
		(setf i 
			(item 
				(items 0 1 2 0 1 2 0 0)
		))	;index into paired stream
	)

	(if (= passage 2)
		(setf i 
			(item 
				(items 0 1 2 3 4 5 6)
		))	;index into paired stream
	)
	(if (= passage 3)
		(setf i 
			(item (items
				(items 0 1 2 0 1 2 0 0)
				(items 0 1 2 3 4 5 6 in random)
				(items 0 1 2 3 4 5 6 in random)
				(items 0 1 2 3 4 5 6 in random)
				(items 0 1 2 3 4 5 6 in random)
				(items 0 1 2 3 4 5 6 in random)
				(items 0 1 2 3 4 5 6 in random)
				(items 0 1 2 0 1 2 0 0)
		)))	;index into paired stream
	)

    (setf idx (nth i idxdur))	;pick i'th pair out of idxdur
    (setf indx (nth 0 idx))		;set idx to 1st element
    (setf origdur (- (nth 1 idx)(nth 0 idx) ))
    (setf rhythm (rhythm (nth 2 idx) tem))  
    ;
    ; improvement in the loop index method - 
    ;   make sure there is a distinction between duration in orig sample and 
    ;   replayed duration.
    ;   You will hear articulations from the following note if the duration of a given fragment is too long
    ;   It follows that for fast tempi, orig dur is ok for replayed duration if using soundin, diskin,
    ;   but for slow tempi you must take care to smooth the end of each fragment.
    ;
	(setf dur rhythm)

    (setf pitch (* tem 0.00909))
;
;	swell
;
	(setf ampidx (item (items 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 )))
    (setf amp (interpl ampidx 0 .1 9 1 19 .1))
	(setf amp (* ampsca amp))
	(setf pan pn)
    (setf dist 2)
    (setf pct .075)
    (setf *totaldur* (max (+ mytime dur) *totaldur*))
))


(defun mrn (&key (revtime 20.))
  (algorithm nil revnote (start 10000 length 1 revtime revtime rhythm 0)
	     (setf mystart 0)
	     (setf dur (+ revtime *totaldur* 10))
	     ))


(defun print-stream (filename)
  (let ((buffer (make-array *buflen*
                            
                            )))
   (with-open-file (f filename :direction :input
                      :if-does-not-exist :error
                      )
     (do ((j 0))((= j (file-length f)))
        (setf myline (read-line f t "eofeof"))
        (if (string-equal myline "eofeof")(return))
        (princ myline)
        (write-char #\Newline)
        (setf j (+ j ))
        )
   ))
)

(defun ms (&key (start-time 1.)(my-scorefile "test.sco"))
  (let* ((myheader (header ""
			   )))
    (fheader my-scorefile myheader)
    (merge all ()

;slow
;	(stompidx 0 46 45 100 1 2 1)

;ordered
	(stompidx 0 92 0 200 1 2 1)
	(stompidx 0 368 89 200 1 2 3)

;random
;	(stompidx 0 92 20 180 1 2 0)
;	(stompidx 0 92 70 180 1 2 0)

;		(mrn)
            )

	(setf mystream (make-string-output-stream))
    (open-cmd my-scorefile)
	        (mix-cmd "all 0 play nil")
))
(ms)
(print-stream  "test.sco")
</java.lang.String>
<int id=timeBehavior >
2
</int>
</blue.soundObject.External>
</[>
</java.util.ArrayList>
</blue.SoundLayer>
</[>
</java.util.ArrayList>
<float id=startTime >
0.0
</float>
<float id=subjectiveDuration >
2.0
</float>
<int id=timeBehavior >
0
</int>
</blue.soundObject.PolyObject>
<blue.ProjectProperties hash=21005093-0 id=projectProperties >
<java.lang.String hash=0-4 id=CsOptions >

</java.lang.String>
<java.lang.String hash=-1406328437-0 id=author >
author
</java.lang.String>
<java.lang.String hash=50-0 id=channels >
2
</java.lang.String>
<java.lang.String hash=-1371276008-0 id=commandLine >
csound32 -odevaudio0
</java.lang.String>
<java.lang.String hash=1600671-0 id=controlRate >
4410
</java.lang.String>
<java.lang.String hash=0-5 id=notes >

</java.lang.String>
<java.lang.String hash=49620849-0 id=sampleRate >
44100
</java.lang.String>
<java.lang.String hash=0-6 id=title >

</java.lang.String>
</blue.ProjectProperties>
<blue.SoundObjectLibrary hash=1-5 id=sObjLib >
</blue.SoundObjectLibrary>
<blue.ScratchPadData hash=6435687-0 id=scratchData >
<boolean id=isWordWrapEnabled >
true
</boolean>
<java.lang.String hash=0-3 id=scratchText />
</blue.ScratchPadData>
<blue.Tables hash=18670253-0 id=tableSet >
<java.lang.String hash=0-3 id=tables />
</blue.Tables>
</blue.BlueData>
