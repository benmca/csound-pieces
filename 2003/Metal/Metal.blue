<blue.BlueData hash=3567635-0 >
<blue.ftable.FTableSet hash=1-0 id=ftables >
</blue.ftable.FTableSet>
<blue.GlobalOrcSco hash=33030647-0 id=globalOrcSco >
<java.lang.String hash=-1798121375-0 id=globalOrc >
ga1 init 0
ga2 init 0

</java.lang.String>
<java.lang.String hash=0-0 id=globalSco >

</java.lang.String>
</blue.GlobalOrcSco>
<blue.orchestra.InstrumentList hash=1-1 id=instrumentList >
</blue.orchestra.InstrumentList>
<blue.LiveData hash=21576085-0 id=liveData >
<java.lang.String hash=-1001887281-0 id=commandLine >
csound -Wdo devaudio -L stdin
</java.lang.String>
<java.util.ArrayList hash=1-2 id=liveSoundObjects >
</java.util.ArrayList>
</blue.LiveData>
<blue.Orchestra hash=18405154-0 id=orchestra >
<java.util.TreeMap hash=104513177-0 id=orch >
<[>
<java.lang.Integer hash=1-3 >
<int id=value >
1
</int>
</java.lang.Integer>
<blue.orchestra.GenericInstrument hash=25305362-0 >
<java.lang.String hash=0-1 id=comment >

</java.lang.String>
<boolean id=enabled >
true
</boolean>
<int id=instrumentNumber >
1
</int>
<java.lang.String hash=-1944260732-0 id=instrumentText >
ipan = p6
idist = 1
ipct = .1
k1	linen	p4, .01, p3, .01
asig1	diskin	"RobertBD.wav",p5
asig2	diskin	"RobertBD.wav",p5
asig=(((asig1*2)+asig2)*k1)*.2
a1, a2		locsig	asig, ipan, idist, ipct
ar1, ar2	locsend
outs	a1,a2
ga1=ga1+ar1
ga2=ga2+ar2

</java.lang.String>
<java.lang.String hash=760491237-0 id=name >
RobertBass Drum
</java.lang.String>
</blue.orchestra.GenericInstrument>
<java.lang.Integer hash=2-0 >
<int id=value >
2
</int>
</java.lang.Integer>
<blue.orchestra.GenericInstrument hash=20100923-0 >
<java.lang.String hash=0-2 id=comment >

</java.lang.String>
<boolean id=enabled >
true
</boolean>
<int id=instrumentNumber >
1
</int>
<java.lang.String hash=217010458-0 id=instrumentText >
ipan = p6
idist = 1
ipct = .1
k1	linen	p4, .01, p3, .01
a1	diskin	"ruinsnr1M.aif",p5
a1=a1*k1
a1, a2		locsig	a1, ipan, idist, ipct
ar1, ar2	locsend
outs	a1,a2
ga1=ga1+ar1
ga2=ga2+ar2

</java.lang.String>
<java.lang.String hash=80026105-0 id=name >
Snare
</java.lang.String>
</blue.orchestra.GenericInstrument>
<java.lang.Integer hash=3-0 >
<int id=value >
3
</int>
</java.lang.Integer>
<blue.orchestra.GenericInstrument hash=13626129-0 >
<java.lang.String hash=0-3 id=comment >

</java.lang.String>
<boolean id=enabled >
true
</boolean>
<int id=instrumentNumber >
1
</int>
<java.lang.String hash=872249359-0 id=instrumentText >
ipan = p6
idist = 1
ipct = .1
k1	linen	p4, .01, p3, .01
a1	diskin	"hh.aif",p5
a1=a1*k1
a1, a2		locsig	a1, ipan, idist, ipct
ar1, ar2	locsend
outs	a1,a2
ga1=ga1+ar1
ga2=ga2+ar2

</java.lang.String>
<java.lang.String hash=69693882-0 id=name >
HiHat
</java.lang.String>
</blue.orchestra.GenericInstrument>
<java.lang.Integer hash=4-0 >
<int id=value >
4
</int>
</java.lang.Integer>
<blue.orchestra.GenericInstrument hash=12827479-0 >
<java.lang.String hash=0-4 id=comment >

</java.lang.String>
<boolean id=enabled >
true
</boolean>
<int id=instrumentNumber >
1
</int>
<java.lang.String hash=128952633-0 id=instrumentText >
ipan = p6
idist = 1
ipct = .1
k1	linen	p4, .01, p3, .01
a1	diskin	"uglybdM.aif",p5
a1=a1*k1
a1, a2		locsig	a1, ipan, idist, ipct
ar1, ar2	locsend
outs	a1,a2
ga1=ga1+ar1
ga2=ga2+ar2

</java.lang.String>
<java.lang.String hash=-846897119-0 id=name >
uglybd
</java.lang.String>
</blue.orchestra.GenericInstrument>
<java.lang.Integer hash=99-0 >
<int id=value >
99
</int>
</java.lang.Integer>
<blue.orchestra.GenericInstrument hash=32653195-0 >
<java.lang.String hash=0-5 id=comment >

</java.lang.String>
<boolean id=enabled >
true
</boolean>
<int id=instrumentNumber >
1
</int>
<java.lang.String hash=2031001812-0 id=instrumentText >
a1	reverb	ga1, .5
a2	reverb	ga2, .5
outs	a1,a2
ga1=0
ga2=0

</java.lang.String>
<java.lang.String hash=0-6 id=name >

</java.lang.String>
</blue.orchestra.GenericInstrument>
</[>
</java.util.TreeMap>
</blue.Orchestra>
<blue.soundObject.PolyObject hash=7497363-0 id=pObj >
<int id=heightIndex >
2
</int>
<boolean id=isRoot >
true
</boolean>
<java.lang.String hash=3506402-0 id=name >
root
</java.lang.String>
<blue.noteProcessor.NoteProcessorChain hash=1-4 id=npc >
</blue.noteProcessor.NoteProcessorChain>
<int id=pixelSecond >
10
</int>
<boolean id=snapEnabled >
false
</boolean>
<float id=snapValue >
1.0
</float>
<java.util.ArrayList hash=17971110-0 id=soundLayers >
<[>
<blue.SoundLayer hash=17971079-0 >
<boolean id=muted >
false
</boolean>
<java.lang.String hash=0-6 id=name />
<boolean id=solo >
false
</boolean>
<java.util.ArrayList hash=16952314-0 id=soundObjects >
<[>
<blue.soundObject.External hash=16952283-0 >
<java.lang.String hash=53544784-0 id=commandLine >
lisp.exe -M c:\Csound\cm-1.3\clisp\cm.mem
</java.lang.String>
<java.lang.String hash=-1820761141-0 id=name >
external
</java.lang.String>
<blue.noteProcessor.NoteProcessorChain hash=1-5 id=npc >
</blue.noteProcessor.NoteProcessorChain>
<float id=startTime >
0.0
</float>
<float id=subjectiveDuration >
94.8
</float>
<java.lang.String hash=994613125-0 id=text >
(in-package :stella)


(defparameter *buflen* 4096)

(defparameter *totaldur* 0)
;
(defobject quick (csound-note)
  ((instr :initform "i") inst mytime dur amp pitch pan)
  (:parameters instr inst mytime dur amp pitch pan))

(defobject revnote (csound-note)
  ((name :initform "i99") mystart dur revtime)
  (:parameters name mystart dur revtime))

;(defun test1 (st len tem pn)
;  (algorithm nil quick (start st length len)
;	(setf pan pn)
;    (setf inst (item (items 1 2 in random)))
;    (setf rhythm (item (items (rhythms q q e e q tempo(tempo tem)) (rhythms q q q q tempo(tempo tem))(rhythms e e e e q e e tempo(tempo tem))
;		(rhythms h q e e tempo(tempo tem)) in random)))
;    (setf dur (* (between 1 8) rhythm))
;    (setf pitch (between 1.3 1.6))
;    (setf amp (between 30000 32768))
;    (setf *totaldur* (max (+ time dur) *totaldur*))
;))

(defun metalfigure (st len tem pn)
  (algorithm nil quick (start st length len)
		(setf pan pn)
		(setf inst (item (items 2 (items 1 for 6) 2 (items 1 for 4) 1 1 
								2 (items 1 for 7) 2 (items 1 for 3) 1 1
								2 (items 1 for 8) 2 (items 1 for 2) 1 1 4
							)))
	;rest 2 quarters after looping -- having inst = 4 is a kludgy way to do this
	(if (= inst 4) 
		(progn
			(setf inst 1)
			(setf pan pn)
			(setf rhythm (item (items 
							(rhythms h tempo(tempo tem))
								)))
			(setf dur (* 2 rhythm))
			(setf pitch 1)
			(setf amp (item (items 0)))
		)
		(progn
			(setf rhythm (item (items 
				(rhythms e tempo(tempo tem))
					)))
			(setf dur (* 2 rhythm))
			(if (= inst 1)
				(setf pitch (between .9 1.1))
				(setf pitch 1)
				)
			(setf amp (* (between .9 1.1)(item (items (items 1 for 12) 0 0))))
		)
	)
;
; bigger random offset for snare (inst 2) than bass drum
;(maybe)
;
	(if (= inst 2)
		(setf mytime (+ time (between .01 .1)))
		(setf mytime (+ time (between .01 .05)))	
	)
	(setf *totaldur* (max (+ time dur) *totaldur*))
))

(defun mrn (&key (revtime 3.))
  (algorithm nil revnote (start 10000 length 1 revtime revtime rhythm 0)
	     (setf mystart 0)
	     (setf dur (+ revtime *totaldur* 1))
	     ))



(defun print-stream (filename)
  (let ((buffer (make-array *buflen*
                            
                            )))
   (with-open-file (f filename :direction :input
                      :if-does-not-exist :error
                      )
     (do ((j 0))((= j (file-length f)))
        (setf myline (read-line f t "eofeof"))
        (if (string-equal myline "eofeof")(return))
        (princ myline)
        (write-char #\Newline)
        (setf j (+ j ))
        )
   ))
)

	
(defun ms (&key (start-time 1.)(my-scorefile "test.sco"))
  (let* ((myheader (header ""			   )))
    (fheader my-scorefile myheader)
    (merge all ()
		(metalfigure 0 90 140 1)
		(metalfigure 0 90 140 20)
		(metalfigure 0 90 140 40)
		(metalfigure 0 90 140 70)
		(metalfigure 0 90 140 90)
;		(mrn)
            )
	(setf mystream (make-string-output-stream))
    (open-cmd my-scorefile)
	        (mix-cmd "all 0 play nil")
))
(ms)
(print-stream  "test.sco")
</java.lang.String>
<int id=timeBehavior >
2
</int>
</blue.soundObject.External>
</[>
</java.util.ArrayList>
</blue.SoundLayer>
</[>
</java.util.ArrayList>
<float id=startTime >
0.0
</float>
<float id=subjectiveDuration >
2.0
</float>
<int id=timeBehavior >
0
</int>
</blue.soundObject.PolyObject>
<blue.ProjectProperties hash=6524644-0 id=projectProperties >
<java.lang.String hash=0-7 id=CsOptions >

</java.lang.String>
<java.lang.String hash=0-8 id=author >

</java.lang.String>
<java.lang.String hash=50-0 id=channels >
2
</java.lang.String>
<java.lang.String hash=7607351-0 id=commandLine >
csoundav_win  -+y -b2048 -W -o Metal.wav
</java.lang.String>
<java.lang.String hash=1600671-0 id=controlRate >
4410
</java.lang.String>
<java.lang.String hash=384316570-0 id=notes >
csoundav_win -+P17 -+y -b2048 
</java.lang.String>
<java.lang.String hash=49620849-0 id=sampleRate >
44100
</java.lang.String>
<java.lang.String hash=0-9 id=title >

</java.lang.String>
</blue.ProjectProperties>
<blue.SoundObjectLibrary hash=1-6 id=sObjLib >
</blue.SoundObjectLibrary>
<blue.ScratchPadData hash=3811922-0 id=scratchData >
<boolean id=isWordWrapEnabled >
true
</boolean>
<java.lang.String hash=0-6 id=scratchText />
</blue.ScratchPadData>
<blue.Tables hash=11565809-0 id=tableSet >
<java.lang.String hash=0-10 id=tables >

</java.lang.String>
</blue.Tables>
</blue.BlueData>
