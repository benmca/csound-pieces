;;	Opening for 'from Mixdown' - tape section;	10/20/00 v1;	notes: getting pace nailed down - notes w/dur and amp only;(in-package :stella) (defparameter *totaldur* 0) ; (defobject quick (csound-note)   ((instr :initform "i1")  dur amp pitch pan dist pct)   (:parameters instr  time dur amp pitch pan dist pct)) ;;(defobject revnote (csound-note)  ((name :initform "i99") mystart dur revtime)  (:parameters name mystart dur revtime));;(defun opening (st len)  (algorithm nil quick (start st length len)	(setf rhythm (item                       (items                        (rhythms w tempo (tempo 84) for 1)                        (rhythms w. tempo (tempo 84) for 32)                        (rhythms h tempo (tempo 84) for 1)     ;end bar 33 NOTE 34                        (rhythms w. tempo (tempo 84) for 4)    ;bars 34-37 NOTE 35-38                        (rhythms w.+w. tempo (tempo 84) for 1) ;bars 38-39 NOTE 39                        (rhythms w. tempo (tempo 84) for 5) ;bars 40-44 NOTE 40-44                        ))) 	(setf dur (interpl count                           0 (rhythm 'h 84)                           1 (rhythm 'h 84)                           22 (rhythm 'w. 84)                           33 (rhythm 'h 84)                           34 (rhythm 'h 84)                           35 (rhythm 'w. 84)                           38 (rhythm 'w. 84)                           39 (rhythm 'w.+w. 84)                           40 (rhythm 'h 84)                           44 (rhythm 'h 84)                           ))	(setf amp (item (items                           (items 0)                          (items 1 for 32)                          (items 0 for 5)  ;end bar 37 NOTE 38                          (items 1)        ;bars 38-39 NOTE 39                          (items 0 for 5)  ;bars 40-44 NOTE 40-44                                                    )));        (setf debug count)        (setf pan 1)        (setf dist 10)    	(setf pct .01)	(setf *totaldur* (max (+ time dur) *totaldur*))))(defun mrn (&key (revtime 10.))   (algorithm nil revnote (start 10000 length 1 revtime revtime rhythm 0) 	     (setf mystart 0) 	     (setf dur (+ revtime *totaldur* 1)) 	     ))   (defun ms (&key (start-time 1.)(my-scorefile "Apps:Csound:Moore:opening1.sco"))   (let* ((myheader (header "" 			   )))     (fheader my-scorefile myheader)     (merge all () 		(opening 1 44)             )     (open-cmd my-scorefile) 	(mix-cmd "all")))