(defun s3t (start)  (let* ((dur pitch amp)         (ampstream (items 1 2 3)))  (thread nil () dur amp pitch))          (loop for i from 0 below 1000 do            (setf amp (item ampstream))            (setf dur (item durstream))          (object simple2 rhythm 0 start mystart instr "i100" pitch 2 ampamp dur dur)          (object simple1 start mystart (* dur 2) .....also:(defobject simple (csound-note)        ((instr :initform "i3") dur amp pitch (rise :initform .01)                (decay :initform .01) (wavetable :initform 1))        (:parameters instr time dur amp pitch rise decay wavetable))(defobject simple2 (csound-note)        ((instr :initform "i2") dur amp pitch)        (:parameters instr time dur amp pitch)) (defun examp2 (start)        (algorithm nil simple (start start length 4)                (setf rhythm 1)                (setf dur rhythm)                (setf pitch 440)                (setf amp 1000)                (item (items                       (expr (sprout (s2 time (+ dur 5))))                       (expr (sprout (s3 time (+ dur 5)))) in heap))                ) ) (defun s2 (start duration)  (algorithm nil simple2 (start start length 1)             (setf rhythm 1)             (setf dur duration)             (setf amp 1)             (setf pitch 1))) (defun s3 (start duration)  (algorithm nil simple2 (start start length 1)             (setf instr "i100")             (setf rhythm 1)             (setf dur duration)             (setf amp 2)             (setf pitch 2))) (defparameter *my-header*        (header                "; Notelist for Csound Orchestra Example2"                "f 1 0 16384 10 1")) (defun make-score ()        (fheader "example2b.sco" *my-header*)        (merge it ()               (examp2 0))        (open-cmd "ex.sco")        (mix-cmd "it") )