(in-package :stella)(defun write-cs (container &key (filename "final.sco"))	(open-cmd filename)	(mix-cmd container));(defobject coalesce (csound-note)  ((instr :initform "i1") dur amp pitch pitch2 index)  (:parameters instr time dur amp pitch pitch2 index))(defparameter mytime 0);(defun coalong (mystart points focusfreq durat ind)  (algorithm nil coalesce (start mystart length points)    (if (= count 0) (setf mytime 0))    (setf index ind)    (setf pitch (between (* focusfreq .5)(* focusfreq 4)))    (setf pitch2 (+ focusfreq (* focusfreq (between .01 .05))))    (setf rhythm (between .01 (/ durat points)))    (setf mytime (+ rhythm mytime))    (setf dur (- durat mytime))    (setf amp 1000)    ));(defun coamain (mystart focusfreq durat points)  (algorithm nil coalesce (start mystart length points)    (if (= count 0) (setf mytime 0))    (setf index 2)    (setf pitch (between (* focusfreq .8)(* focusfreq 1.2)))    (setf pitch2 focusfreq)    (setf rhythm (between .01 (/ durat points)))    (setf mytime (+ rhythm mytime))    (setf dur (- durat mytime))    (setf amp 1500)    ));(defobject pulse (csound-note)  ((instr :initform "i2") dur pitch amp)  (:parameters instr time dur pitch amp))(defun pulselow (mystart durat)  (algorithm nil pulse (start mystart length durat)    (setf rhythm (between .5 1))    (setf dur rhythm)    (setf pitch (interpl count 0 110.0 20 220.0 60 50.0 80 110.0))    (setf amp (interpl count 0 300.0 40 10000.0 80 300))));(defobject voice (csound-note)  ((instr :initform "i3") dur funfreq amp formant index modrat)  (:parameters instr time dur funfreq amp formant index modrat))(defun voice1 (mystart)  (algorithm nil voice (start mystart)    (setf rhythm (item (rhythms e)))    (setf dur (* rhythm (between .01 .2)))    (setf funfreq 220)    (setf formant (item (pitches c5 e e c e fs):kill t))    (setf index (between 1.0 3.0))    (setf modrat (item (items 1.0 1.0 1.0 1.0 1.4 1.6)))    (setf amp (interpl count 0 500.0 6 10000.0))));(defobject sing (csound-note)  ((instr :initform "i4") dur amp pitch)  (:parameters instr time dur amp pitch))(defun voice2 (mystart)  (algorithm nil sing (start mystart)    (setf rhythm (item (rhythms e)))    (setf dur (* rhythm (between .01 .2)))    (setf pitch (item (pitches c2 e e c e fs):kill t))    (setf amp (interpl count 0 1000.0 6 10000.0))));(defun make-score (&key (start-time 1.)(my-scorefile "final.sco"))  (let* ((myheader (header "f 1 0 16384 10 1"                           "f 2 0 16384 9 1 3 0 3 1 0 9 .3333 180" )))    (fheader my-scorefile myheader)    (merge all ()      (coalong 1 20 440 20 5)      (coamain 15 220 60 20)      (pulselow 19 80)      (coamain 40 523.2 2 5)      (coamain 42 659.3 2 7)      (coamain 44 659.3 2 3)      (coamain 46 523.2 2 8)      (coamain 48 659.3 2 9)      (coamain 50 740 2 3)      (voice1 52)      (voice1 55)      (voice2 60))    (write-cs "all" :filename my-scorefile)))