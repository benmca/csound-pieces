(in-package :stella) (defparameter *totaldur* 0) ; (defobject fmtrum (csound-note)   ((instr :initform "i1") dur amp pitch indx pan dist pct dev)   (:parameters instr time dur amp pitch indx pan dist pct dev))(defobject revnote (csound-note)  ((name :initform "i99") mystart dur revtime)  (:parameters name mystart dur revtime));;;(defun trum (st len)  (algorithm nil fmtrum (start st length len)    (setf pitch (item                 (items                  (items                    (items (pitches a5 b c d e f g a6 b c d e f g a7 b c d e f g in random for 30))                    (items (pitches a5 b cs d e fs g a6 b cs d e fs g a7 b cs d e fs g in random for 45)))                  (pitches r for 8)                   (items                    (items (pitches a1 as cs d e fs g a2 as cs d e fs g a3 as cs d e fs g in random for 45))                    (items (pitches a2 as cs ds e fs g a3 as cs ds e fs g a4 as cs ds e fs g in random for 30)))                   )))    (setf rhythm (item                  (items                  (items                    (rhythms  |2.| q |4.| e |8.| s |16.| in random for (item (items 10 15 20 30 in heap)) tempo (tempo 160)) for 4)                  (rhythms 1 .5 .25 .75 for 8)                  (items                    (rhythms  |2.| q |4.| e |8.| s |16.| in random for (item (items 10 15 20 30 in heap)) tempo (tempo 160)) for 4)                  )))        (setf rhythm (* rhythm (between .99 1.01)))    (setf dur (* rhythm (between 1 1.04)))    (setf indx 1)    (setf amp .01)    (setf pan (between 0 90))    (setf dist (between 1 5))    (setf pct 1)    (setf dev (between .98 1.03))    (setf *totaldur* (max (+ time dur) *totaldur*))));;; ;(defun mrn (&key (revtime 20.))  (algorithm nil revnote (start 10000 length 1 revtime revtime rhythm 0)	     (setf mystart 0)	     (setf dur (+ revtime *totaldur* 1))	     )) ; (defun ms (&key (start-time 1.)(my-scorefile "Study1.sco"))   (let* ((myheader (header "f1 0 16384 9 1 1 0"                           "f2 0 4097 9 .5 1 0"                           "f3 0 513 7 0 256 1 256 .8"			   )))    (fheader my-scorefile myheader)     (merge all ()       (trum 1 158)      (mrn)            )    (open-cmd my-scorefile) 	(mix-cmd "all")))