(in-package :stella)
(defparameter *totaldur* 0)
;
(defobject quick (csound-note)
  ((instr :initform "i") inst dur amp pitch pan)
  (:parameters instr inst time dur amp pitch pan))

(defobject revnote (csound-note)
  ((name :initform "i99") mystart dur revtime)
  (:parameters name mystart dur revtime))

(defun test1 (st len tem pn)
  (algorithm nil quick (start st length len)
	(setf pan pn)
    (setf inst (item (items 1 2 in random)))
    (setf rhythm (item (items (rhythms q q e e q tempo(tempo tem)) (rhythms q q q q tempo(tempo tem))(rhythms e e e e q e e tempo(tempo tem))
		(rhythms h q e e tempo(tempo tem)) in random)))
    (setf dur (* (between 1 8) rhythm))
    (setf pitch (between 1.3 1.6))
    (setf amp (between 30000 32768))
    (setf *totaldur* (max (+ time dur) *totaldur*))
))
(defun lipsbeat (st len tem pn)
  (algorithm nil quick (start st length len)
	(setf pan pn)
    (setf inst (item (items 1 1 2 1 1 2 )))
    (setf rhythm (item (items (rhythms e e e q e q tempo(tempo tem))) ) )
    (setf dur (* (between 1 8) rhythm))
    (setf pitch (between 1.3 1.6))
    (setf amp (between 30000 32768))
    (setf *totaldur* (max (+ time dur) *totaldur*))
))
(defun pulseHH (st len tem pn)
  (algorithm nil quick (start st length len)
    (setf inst 3)
	(setf pan pn)
    (setf rhythm (item (items (rhythms q tempo(tempo tem) ) )))
    (setf dur rhythm )
    (setf pitch 1)
    (setf amp (between 10000 20000 ))
    (setf *totaldur* (max (+ time dur) *totaldur*))
))

(defun mrn (&key (revtime 10.))
  (algorithm nil revnote (start 10000 length 1 revtime revtime rhythm 0)
	     (setf mystart 0)
	     (setf dur (+ revtime *totaldur* 1))
	     ))

(defun ms (&key (start-time 1.)(my-scorefile "..\\cswork\\dnb\\dnb1.sco"))
  (let* ((myheader (header "f 1 0 16384 9 .5 1 0"
			   )))
    (fheader my-scorefile myheader)
    (merge all ()
	    (test1 1 192 300 .2)
	    ;(test1 1 100 300 .8)
	    (lipsbeat 1 96 150 .8)
		(pulseHH 1 64 150 .5)
            )
    (open-cmd my-scorefile)
	(mix-cmd "all")))
