(in-package :stella) (defparameter *totaldur* 0)(defparameter flag 0); (defobject mainobj (csound-note)  ((instr :initform "i1") dur ampoff poff pan dist pct dens gdur pscale)  (:parameters instr time dur ampoff poff pan dist pct dens gdur pscale))(defobject revnote (csound-note)  ((name :initform "i99") mystart dur revtime)  (:parameters name mystart dur revtime));(defun main (st)  (algorithm nil mainobj (start st length 110)  (setf rhythm (item                 (items (items .3 for 10)(items 1 for 10)(items 3 for 10)(items 6 for 10)(items 9 for 10)(items 12 for 10)                       (items 9 for 10)(items 6 for 10)(items 3 for 10)(items 1 for 10)(items .3 for 10))                  ))  (setf dur (* rhythm (interpl count 0 0.3 50 .6 109 1)))  (setf ampoff 1)  (setf poff (interpl count 0 1.0 50 10.0 109 1.0))  (setf pan (between 0 90.0))  (setf dist (between 1 6.0))  (setf pct .1)  (setf dens (interpl count 0 1.0 50 100 109 .3))  (setf gdur (* .954 (interpl count 0 0.1 50 1 109 0.1)))  (setf pscale (* .5 (interpl count 0 1.0 50 .25 109 1)))  (setf *totaldur* (max (+ time dur) *totaldur*))));;(defun multi1 (st len)       (mute nil (length len)         (setf flag (item (items 1 0 in random)))         (if (= flag 1)          (sprout withdelay (mytime))          (sprout delay (mytime))          )));;;(defun withdelay (st)  (algorithm nil soundin (start st length 1)    (setf rhythm (rhythms q e e. s s. in random tempo (tempo 140)))    (setf dur (* rhythm 2))    (setf delay (rhythms q e e. s s. in random tempo (tempo 140)))    (setf mytime (+ rhythm time))    ...)(defun mrn (&key (revtime 10.))  (algorithm nil revnote (start 10000 length 1 revtime revtime rhythm 0)	     (setf mystart 0)	     (setf dur (+ revtime *totaldur* 1))	     )) ; (defun ms (&key (start-time 1.)(my-scorefile "HD:Cswork:vardelay:vd1.sco"))  (let* ((myheader (header ""                            "f5  0 512  20 2                  ; Hanning window"                           "f10 0 65536 1  \"cello_pizz.C4.aiff\" 0 0 0"			   )))    (fheader my-scorefile myheader)     (merge all ()       (main 1)      (mrn)            )    (open-cmd my-scorefile) 	(mix-cmd "all")))