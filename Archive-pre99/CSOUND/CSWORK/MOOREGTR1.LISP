(in-package :stella) (defparameter *totaldur* 0)(defparameter a 0)(defparameter i 0)(defparameter du 0)(defparameter idx 0)(defparameter idur 0) (defparameter idxdur 0) (defparameter pitchindex 0) (defparameter overalltempo 0) ; (defobject soundwarp (csound-note)  ((instr :initform "i9") dur ampoff poff pan dist pct dens)  (:parameters instr time dur ampoff poff pan dist pct dens))(defobject revnote (csound-note)  ((name :initform "i99") mystart dur revtime)  (:parameters name mystart dur revtime));(defun loop1 (st len pn tem am rot)  (algorithm nil soundin (start st length len)));;(defun mrn (&key (revtime 20.))  (algorithm nil revnote (start 10000 length 1 revtime revtime rhythm 0)	     (setf mystart 0)	     (setf dur (+ revtime *totaldur* 1))	     )) ; (defun ms (&key (start-time 1.)(my-scorefile "HD:Cswork:mooregtr1.sco")(my-midifile "HD:Cswork:mooregtr1.mid"))   (let* ((myheader (header ""                     "f 1 0 1048576 1 \"polvoish.aif\" 0 0 0"                    "f 8 0 16384 9 .5 1 0"			   )))    (fheader my-scorefile myheader)     (merge all () ;;function proto:;(defun loop1/2 (st len pn tem am rot);;      (loop1 1 1 10 80 1 5)      (loop1 1 60 0 80 1 5)            )    (open-cmd my-scorefile) 	(mix-cmd "all")    (open-cmd my-midifile) 	(mix-cmd "all")))