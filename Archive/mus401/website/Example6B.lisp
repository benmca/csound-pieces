(in-package :stella)(defobject trumpet (csound-note)        ((instr :initform "i8") dur amp pitch brightness dev1 dev2 attack formant amp2 fmrat)        (:parameters instr time dur amp pitch brightness dev1 dev2 attack formant amp2 fmrat))(defobject reverb (csound-note)  ((name :initform "i99") mystart dur revtime)  (:parameters name mystart dur revtime))(defparameter *totaldur* 0) ; This variable will tell us when the last note                            ; turns off so that we can set our reverb note's                            ; duration to *totaldur* plus the reverb time.(defun trump1 (mystart)   (algorithm nil trumpet (start mystart)     (setf rhythm (* (between .97 1.03) (interpl count 0 .4 40 .4 48 1 49 4)))     (setf dur  rhythm)     (setf *totaldur* (max (+ time dur) *totaldur*))     (setf pitch (item (pitches c5 for 51) :kill t) )     (setf formant (interpl count 0 1500.0 40 2300.0 49 2500.0))     (setf amp .3)     (setf amp2 (interpl count 0 .2 49 .05))     (setf attack (interpl count 0 .1 49 .3))     (setf fmrat (interpl count 0 1.0 10 1.0 20 2.0 30 2.0 40 1.0 49 1.0 50 1.413))     (setf brightness (interpl count 0 1.5 49 1.0))     (setf dev1 (interpl count 0 3.0 47 .125 49 .125 50 3.0))     (setf dev2 (interpl count 0 .666 47 2.0))))(defun make-rev-note (&key (revtime 2.2))  (algorithm nil reverb (start 10000 length 1 revtime revtime rhythm 0)    (setf mystart 0)    (setf dur (+ revtime *totaldur*))    ))(defun make-score (&key (start-time 1.)                        (filename "trumpet2.sco"))  (let* ((header (header "f 1 0 16384 10 1"                         "f 2 0 16385 9 .5 1 0"                         "f 3 0 4097 7 0 2048 1 2048 .8")))    (fheader filename header)    (merge all (start start-time)      (trump1 0)      (make-rev-note))    (write-cs "all" :filename filename)))