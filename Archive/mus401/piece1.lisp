(in-package :stella)(defun write-cs (container &key (filename "drum2.sco"))	(open-cmd filename)	(mix-cmd container));(defobject coalesce (csound-note)  ((instr :initform "i1") dur amp pitch pitch2 index)  (:parameters instr time dur amp pitch pitch2 index))(defparameter rhy 0)(defun coalong (mystart points focusfreq durat)  (setf rhy 0)  (algorithm nil coalesce (start mystart length points ind)    (setf pitch (between (* focusfreq .5)(* focusfreq 4)))    (setf pitch2 focusfreq)    (setf rhythm (between .01 (/ durat points)))    (setf rhy (+ rhy rhythm))    (if (< count 1)       (setf dur durat)      (setf dur (- durat rhy)))    (setf amp 1500)    ));(defobject pulse (csound-note)  ((instr :initform "i2") dur amp pitch)  (:parameters instr time dur amp pitch));(defun make-score (&key (start-time 1.)(my-scorefile "piece1.sco"))  (let* ((myheader (header "f 1 0 16384 10 1")))    (fheader my-scorefile myheader)    (merge all ()      (coalong 1 20 440 20))    (write-cs "all" :filename my-scorefile)))